generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// npx prisma db push
// npx prisma generate
model User {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  email               String   @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  username            String   @unique
  password            String
  points              Int      @default(0)
  coins               Int      @default(0)
  streak              Int      @default(0)
  lastAnsweredDate    DateTime
  answers             Answer[]
  profileImg          String  @default("")
  unlockedRewards     Int     @default(0)
  messages            Message[]
}
// passwordConfirm     String
// passwordChangedAt   DateTime
// passwordResetToken  String
// passwordResetExpires DateTime

model Question {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  title String @unique
  text String
  startDate DateTime @unique
  correctAnswer String
  answers Answer[]
  firstAnswerId String @default("")
  messages Message[]
}

// firstAnswerId String? @db.ObjectId

model Answer {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  question Question @relation(fields: [questionId], references: [id])
  questionId String @db.ObjectId
  answer String
  isFirst Boolean @default(false)
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  question Question @relation(fields: [questionId], references: [id])
  questionId String @db.ObjectId
  message String
}